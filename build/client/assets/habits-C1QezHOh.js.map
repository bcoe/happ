{"version":3,"file":"habits-C1QezHOh.js","sources":["../../../app/providers/habits.tsx"],"sourcesContent":["import * as React from \"react\";\n\nexport interface HabitType {\n  name: string;\n  id: string;\n}\n\ninterface HabitsType {\n  habits: Array<HabitType>; \n  load: () => Promise<void>;\n  create: (type: string) => Promise<void>;\n  set: (habits: Array<HabitType>) => {};\n  remove: (prefix: string, created: number) => Promise<void>;\n}\n\nconst HabitsContext = React.createContext<HabitsType>(null!);\n\nconst HABITS: Array<HabitType> = [\n  {\n    id: 'abc123',\n    name: 'Make my morning coffee'\n  },\n  {\n    id: 'qwerty',\n    name: 'Take Finn for a walk'\n  },\n];\n\nexport function HabitsProvider({ children }: { children: React.ReactNode }) {\n  const [habits, setHabits] =  React.useState<Array<HabitType>>([]);\n\n  const set = (habits: Array<HabitType>) => {\n    setHabits([...habits]);\n    return {}\n  }\n\n  const create = async (type: string) => {\n    /*const body: {type: string; ott?: string} = {\n      ...opts,\n      type,\n    };\n    if (account.ott) {\n      body.ott = account.ott;\n    }\n    const req = await fetch('/_/token', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    if (req.status === 200) {\n      const tokenObject = await req.json();\n      flash.set('success', tokenObject.message);\n      account.setOtt(undefined);\n    }\n    // TODO: add error handling with tests.\n    */\n  }\n\n  const remove = async (prefix: string, created: number) => {\n    /*const newTokens = [];\n    for (const token of tokens) {\n      if (token.prefix === prefix && token.created === created) {\n        await fetch('/_/api/v1/token', {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(token)\n        });\n        // TODO: add error handling with tests.\n        continue;\n      } else {\n        newTokens.push(token);\n      }\n    }\n    setTokens([...newTokens]);*/\n  };\n\n  const load = async () => {\n    const resp = await fetch(\"/v1/habits\");\n    console.info(await resp.json());\n    set(HABITS);\n  }\n\n  const value = { habits, load, set, create, remove };\n\n  return <HabitsContext.Provider value={value}>{children}</HabitsContext.Provider>;\n}\n\nexport function useHabits() {\n  return React.useContext(HabitsContext);\n}\n"],"names":["HabitsContext","React.createContext","HABITS","HabitsProvider","children","habits","setHabits","React.useState","set","value","resp","type","prefix","created","jsx","useHabits","React.useContext"],"mappings":"2WAeA,MAAMA,EAAgBC,EAAAA,cAAgC,IAAK,EAErDC,EAA2B,CAC/B,CACE,GAAI,SACJ,KAAM,wBACR,EACA,CACE,GAAI,SACJ,KAAM,sBACR,CACF,EAEgB,SAAAC,EAAe,CAAE,SAAAC,GAA2C,CAC1E,KAAM,CAACC,EAAQC,CAAS,EAAKC,EAAM,SAA2B,CAAE,CAAA,EAE1DC,EAAOH,IACDC,EAAA,CAAC,GAAGD,CAAM,CAAC,EACd,IAqDHI,EAAQ,CAAE,OAAAJ,EAAQ,KANX,SAAY,CACjB,MAAAK,EAAO,MAAM,MAAM,YAAY,EACrC,QAAQ,KAAK,MAAMA,EAAK,KAAM,CAAA,EAC9BF,EAAIN,CAAM,CAAA,EAGkB,IAAAM,EAAK,OAlDpB,MAAOG,GAAiB,CAAA,EAkDI,OA1B5B,MAAOC,EAAgBC,IAAoB,CAAA,GA4B1D,OAAQC,EAAAA,IAAAd,EAAc,SAAd,CAAuB,MAAAS,EAAe,SAAAL,CAAS,CAAA,CACzD,CAEO,SAASW,GAAY,CACnB,OAAAC,EAAAA,WAAiBhB,CAAa,CACvC"}