{"version":3,"file":"habits-tKhYF_uH.js","sources":["../../../app/providers/habits.tsx"],"sourcesContent":["import * as React from \"react\";\n\nexport type DayToggles = {\n  Mon: boolean;\n  Tue: boolean;\n  Wed: boolean;\n  Thu: boolean;\n  Fri: boolean;\n  Sat: boolean;\n  Sun: boolean;\n};\n\nexport const NO_DAYS_SET = {\n  Mon: false,\n  Tue: false,\n  Wed: false,\n  Thu: false,\n  Fri: false,\n  Sat: false,\n  Sun: false\n};\n\nexport const ALL_DAYS_SET = {\n  Mon: true,\n  Tue: true,\n  Wed: true,\n  Thu: true,\n  Fri: true,\n  Sat: true,\n  Sun: true\n};\n\nexport interface HabitType {\n  name: string;\n  days: DayToggles,\n  habit_id: string;\n  id: string;\n  status: boolean;\n  date: string;\n}\n\nexport interface HabitResponse {\n  current_dow: string;\n  habits: Array<HabitType>;\n}\n\ninterface NoteResponse {\n  note?: {\n    note: string\n  };\n}\n\ninterface HabitsType {\n  habits: Array<HabitType>; \n  empty: boolean;\n  currentDayOfWeek: string;\n  editing: boolean;\n  currentlyEditing?: HabitType;\n  setEditing: (editing: boolean, id: string | undefined) => Promise<void>;\n  load: () => Promise<void>;\n  create: (name: string, days: DayToggles) => Promise<void>;\n  update: (id: string, name: string, days: DayToggles) => Promise<void>;\n  del: (id: string) => Promise<void>;\n  set: (habits: HabitResponse) => {};\n  toggle: (id: string) => Promise<void>;\n  move: (oldIndex: number, newIndex: number) => Promise<void>;\n  // Notes CRUD:\n  note: string;\n  createNote: (note: string) => Promise<void>;\n  loadNote: () => Promise<void>;\n}\n\nconst HabitsContext = React.createContext<HabitsType>(null!);\n\nexport function HabitsProvider({ children }: { children: React.ReactNode }) {\n  const [habits, setHabits] = React.useState<Array<HabitType>>([]);\n  const [empty, setEmpty] = React.useState<boolean>(false);\n  const [currentDayOfWeek, setCurrentDayOfWeek] = React.useState<string>('');\n  const [editing, _setEditing] = React.useState<boolean>(false);\n  const [currentlyEditing, setCurrentlyEditing] = React.useState<HabitType | undefined>(undefined);\n  const [note, setNote] = React.useState<string>('');\n\n  const set = (habits: HabitResponse) => {\n    setHabits([...habits.habits]);\n    setEmpty(!habits.habits.length);\n    setCurrentDayOfWeek(habits.current_dow);\n    return {}\n  }\n\n  const create = async (name: string, days: DayToggles) => {\n    let hasDaysSet = false;\n    for (const toggle of Object.values(days)) {\n      if (toggle) hasDaysSet = true;\n    }\n    await fetch('/v1/habits', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({name, days: hasDaysSet ? days : undefined})\n    });\n  }\n\n  const update = async (id: string, name: string, days: DayToggles) => {\n    let hasDaysSet = false;\n    for (const toggle of Object.values(days)) {\n      if (toggle) hasDaysSet = true;\n    }\n    await fetch(`/v1/habits/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({name, days: hasDaysSet ? days : ALL_DAYS_SET})\n    });\n  }\n\n  const del = async (id: string) => {\n    await fetch(`/v1/habits/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  const toggle = async (id: string) => {\n    const habit = habits.find((h) => {\n      if (h.id === id) return true;\n    })\n    if (!habit) return;\n    await fetch('/v1/habits-daily', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        habit_id: habit.habit_id,\n        status: !habit.status,\n        date: habit.date,\n      })\n    });\n  }\n\n  const move = async (oldIndex: number, newIndex: number) => {\n    await fetch('/v1/habits/array-move', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        oldIndex,\n        newIndex\n      })\n    });\n  }\n\n  const load = async () => {\n    const resp = await fetch(\"/v1/habits-daily\");\n    const habits = await resp.json();\n    habits.habits.map((h) => {\n      h.id = h.habit_id;\n    });\n    set(habits);\n    await loadNote();\n  }\n\n  const setEditing = async (editing: boolean, id: string | undefined) => {\n    if (id) {\n      setCurrentlyEditing(habits.find(h => {\n        return h.id === id;\n      }));\n    } else {\n      setCurrentlyEditing(undefined);\n    }\n    _setEditing(editing);\n  }\n\n  // Add notes to your day that you can come back and reference in the future. Why did I have trouble making it\n  // to the gym on August 1st 2024?\n  const createNote = async (note: string) => {\n    await fetch('/v1/notes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({note})\n    });\n  };\n\n  const loadNote = async () => {\n    const note: string = await fetch('/v1/notes/today', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(resp => resp.json())\n    .then((resp: NoteResponse) => {\n      return resp.note ? resp.note.note : '';\n    });\n    console.info('setting note', note);\n    setNote(note);\n  };\n\n  const value = { habits, empty, currentDayOfWeek, editing, setEditing, currentlyEditing, load, set, create, update, del, toggle, move, note, createNote, loadNote };\n\n  return <HabitsContext.Provider value={value}>{children}</HabitsContext.Provider>;\n}\n\nexport function useHabits() {\n  return React.useContext(HabitsContext);\n}\n"],"names":["NO_DAYS_SET","Mon","Tue","Wed","Thu","Fri","Sat","Sun","ALL_DAYS_SET","HabitsContext","React","HabitsProvider","children","habits","setHabits","useState","empty","setEmpty","currentDayOfWeek","setCurrentDayOfWeek","editing","_setEditing","currentlyEditing","setCurrentlyEditing","undefined","note","setNote","set","length","current_dow","create","name","days","hasDaysSet","toggle","Object","values","fetch","method","headers","body","JSON","stringify","update","id","del","habit","find","h","habit_id","status","date","move","oldIndex","newIndex","load","json","map","loadNote","setEditing","createNote","then","resp","info","value","jsx","useHabits"],"mappings":"4WAYO,MAAMA,EAAc,CACzBC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,EACP,EAEaC,EAAe,CAC1BP,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,EACP,EA0CME,EAAgBC,EAAAA,cAAgC,IAAK,EAEpD,SAASC,EAAe,CAAEC,SAAAA,CAAwC,EAAG,CAC1E,KAAM,CAACC,EAAQC,CAAS,EAAIJ,EAAMK,SAA2B,CAAE,CAAA,EACzD,CAACC,EAAOC,CAAQ,EAAIP,WAAwB,EAAK,EACjD,CAACQ,EAAkBC,CAAmB,EAAIT,WAAuB,EAAE,EACnE,CAACU,EAASC,CAAW,EAAIX,WAAwB,EAAK,EACtD,CAACY,EAAkBC,CAAmB,EAAIb,EAAAA,SAAsCc,MAAS,EACzF,CAACC,EAAMC,CAAO,EAAIhB,WAAuB,EAAE,EAE3CiB,EAAOd,IACXC,EAAU,CAAC,GAAGD,EAAOA,MAAM,CAAC,EACnBI,EAAA,CAACJ,EAAOA,OAAOe,MAAM,EAC9BT,EAAoBN,EAAOgB,WAAW,EAC/B,IAGHC,EAAS,MAAOC,EAAcC,IAAqB,CACvD,IAAIC,EAAa,GACjB,UAAWC,KAAUC,OAAOC,OAAOJ,CAAI,EACjCE,IAAqBD,EAAA,IAE3B,MAAMI,MAAM,aAAc,CACxBC,OAAQ,OACRC,QAAS,CACP,eAAgB,kBAClB,EACAC,KAAMC,KAAKC,UAAU,CAACX,KAAAA,EAAMC,KAAMC,EAAaD,EAAOR,MAAAA,CAAU,CAAA,CACjE,CAAA,EAGGmB,EAAS,MAAOC,EAAYb,EAAcC,IAAqB,CACnE,IAAIC,EAAa,GACjB,UAAWC,KAAUC,OAAOC,OAAOJ,CAAI,EACjCE,IAAqBD,EAAA,IAErBI,MAAAA,MAAM,cAAcO,CAAE,GAAI,CAC9BN,OAAQ,MACRC,QAAS,CACP,eAAgB,kBAClB,EACAC,KAAMC,KAAKC,UAAU,CAACX,KAAAA,EAAMC,KAAMC,EAAaD,EAAOxB,CAAAA,CAAa,CAAA,CACpE,CAAA,EAGGqC,EAAM,MAAOD,GAAe,CAC1BP,MAAAA,MAAM,cAAcO,CAAE,GAAI,CAC9BN,OAAQ,SACRC,QAAS,CACP,eAAgB,kBAClB,CAAA,CACD,CAAA,EAGGL,EAAS,MAAOU,GAAe,CAC7BE,MAAAA,EAAQjC,EAAOkC,KAAYC,GAAA,CAC/B,GAAIA,EAAEJ,KAAOA,EAAW,MAAA,EAAA,CACzB,EACIE,GACL,MAAMT,MAAM,mBAAoB,CAC9BC,OAAQ,OACRC,QAAS,CACP,eAAgB,kBAClB,EACAC,KAAMC,KAAKC,UAAU,CACnBO,SAAUH,EAAMG,SAChBC,OAAQ,CAACJ,EAAMI,OACfC,KAAML,EAAMK,IAAAA,CACb,CAAA,CACF,CAAA,EAGGC,EAAO,MAAOC,EAAkBC,IAAqB,CACzD,MAAMjB,MAAM,wBAAyB,CACnCC,OAAQ,OACRC,QAAS,CACP,eAAgB,kBAClB,EACAC,KAAMC,KAAKC,UAAU,CACnBW,SAAAA,EACAC,SAAAA,CAAAA,CACD,CAAA,CACF,CAAA,EAGGC,EAAO,SAAY,CAEjB1C,MAAAA,EAAS,MADF,MAAMwB,MAAM,kBAAkB,GACjBmB,OAC1B3C,EAAOA,OAAO4C,IAAWT,GAAA,CACvBA,EAAEJ,GAAKI,EAAEC,QAAAA,CACV,EACDtB,EAAId,CAAM,EACV,MAAM6C,EAAS,CAAA,EAGXC,EAAa,MAAOvC,EAAkBwB,IAA2B,CAE/C/B,EADlB+B,EACkB/B,EAAOkC,KAAUC,GAC5BA,EAAEJ,KAAOA,CACjB,EAEmBpB,MAFlB,EAIJH,EAAYD,CAAO,CAAA,EAKfwC,EAAa,MAAOnC,GAAiB,CACzC,MAAMY,MAAM,YAAa,CACvBC,OAAQ,OACRC,QAAS,CACP,eAAgB,kBAClB,EACAC,KAAMC,KAAKC,UAAU,CAACjB,KAAAA,CAAAA,CAAK,CAAA,CAC5B,CAAA,EAGGiC,EAAW,SAAY,CACrBjC,MAAAA,EAAe,MAAMY,MAAM,kBAAmB,CAClDC,OAAQ,MACRC,QAAS,CACP,eAAgB,kBAClB,CAAA,CACD,EACAsB,KAAaC,GAAAA,EAAKN,MAAM,EACxBK,KAAMC,GACEA,EAAKrC,KAAOqC,EAAKrC,KAAKA,KAAO,EACrC,EACOsC,QAAAA,KAAK,eAAgBtC,CAAI,EACjCC,EAAQD,CAAI,CAAA,EAGRuC,EAAQ,CAAEnD,OAAAA,EAAQG,MAAAA,EAAOE,iBAAAA,EAAkBE,QAAAA,EAASuC,WAAAA,EAAYrC,iBAAAA,EAAkBiC,KAAAA,EAAM5B,IAAAA,EAAKG,OAAAA,EAAQa,OAAAA,EAAQE,IAAAA,EAAKX,OAAAA,EAAQkB,KAAAA,EAAM3B,KAAAA,EAAMmC,WAAAA,EAAYF,SAAAA,CAAAA,EAEjJ,OAAAO,EAAA,IAACxD,EAAc,SAAd,CAAuB,MAAAuD,EAAa,sBAAA,UAAA,wBAAA,iBAAA,0BAAA,aAAEpD,SAAAA,CAAS,CAAA,CACzD,CAEO,SAASsD,GAAY,CACnBxD,OAAAA,EAAAA,WAAiBD,CAAa,CACvC"}